import styles from '../styles'

const darkTheme = {
  primary: styles.colors.light.primary,
  secondary: styles.colors.dark.secondary,
  tertiary: styles.colors.dark.tertiary,
  background: styles.colors.darkMode.modalBackgroundSecondary,
  backgroundSecondary: styles.colors.darkMode.modalBackground,
  backgroundImage: styles.colors.light.backgroundImage,
  accent: styles.colors.tari.purple,
  accentDark: styles.colors.tari.purpleDark,
  accentMerged: styles.colors.merged.dark,
  disabledText: styles.colors.dark.placeholder,
  tariGradient: styles.gradients.tariDark,
  tariTextGradient: styles.gradients.tariText,
  mergedGradient: styles.gradients.mergedDark,
  warningGradient: styles.gradients.warning,
  greenMedium: styles.colors.secondary.greenMedium,
  borderColor: styles.colors.darkMode.modalBackground,

  titleBar: styles.colors.dark.primary,
  borderColorLight: styles.colors.secondary.borderLight,
  resetBackground: styles.colors.light.overlay,
  resetBackgroundHover: styles.colors.light.overlayDark,
  moneroDark: styles.colors.monero.dark,
  controlBackground: 'rgba(255,255,255,.2)',
  infoTag: styles.colors.darkMode.tags,
  infoText: styles.colors.secondary.infoText,
  on: styles.colors.secondary.on,
  onText: styles.colors.secondary.onText,
  onTextLight: styles.colors.secondary.onTextLight,
  warning: styles.colors.secondary.warning,
  warningTag: styles.colors.darkMode.modalBackground,
  warningText: styles.colors.secondary.warningText,
  warningDark: styles.colors.secondary.warningDark,
  success: styles.colors.secondary.onTextLight,
  error: styles.colors.secondary.error,
  expert: 'rgba(255, 255, 255, 0.06)',
  expertText: styles.gradients.tari,
  expertSecText: 'rgba(255, 255, 255, 0.32)',
  lightTag: styles.colors.darkMode.modalBackground,
  lightTagText: styles.colors.dark.secondary,
  placeholderText: styles.colors.dark.placeholder,
  mergedAccent: styles.colors.merged.dark,
  helpTipText: styles.colors.light.textSecondary,
  runningTagBackground: styles.colors.darkMode.tags,
  runningTagText: styles.colors.secondary.onTextLight,
  dashboardRunningTagText: styles.colors.light.primary,
  dashboardRunningTagBackground: styles.colors.darkMode.modalBackground,
  switchBorder: styles.colors.darkMode.input,
  switchCircle: styles.colors.dark.secondary,
  switchController: styles.colors.light.overlay,

  inverted: {
    primary: styles.colors.light.primary,
    secondary: styles.colors.dark.secondary,
    tertiary: styles.colors.dark.tertiary,
    background: styles.colors.darkMode.modalBackgroundSecondary,
    backgroundSecondary: styles.colors.darkMode.modalBackground,
    backgroundImage: styles.colors.light.backgroundImage,
    accent: styles.colors.tari.purple,
    accentDark: styles.colors.tari.purpleDark,
    accentMerged: styles.colors.merged.dark,
    disabledText: styles.colors.dark.placeholder,
    tariGradient: styles.gradients.tariDark,
    tariTextGradient: styles.gradients.tariText,
    mergedGradient: styles.gradients.mergedDark,
    warningGradient: styles.gradients.warning,
    greenMedium: styles.colors.secondary.greenMedium,
    infoTag: styles.colors.secondary.info,
    infoText: styles.colors.secondary.infoText,
    on: styles.colors.secondary.on,
    onText: styles.colors.secondary.onText,
    onTextLight: styles.colors.secondary.onTextLight,
    warning: styles.colors.secondary.warning,
    warningText: styles.colors.secondary.warningText,
    warningDark: styles.colors.secondary.warningDark,
    success: styles.colors.secondary.onTextLight,
    error: styles.colors.secondary.error,
    expert: 'rgba(255, 255, 255, 0.06)',
    expertText: styles.gradients.tari,
    expertSecText: 'rgba(255, 255, 255, 0.32)',
    lightTag: styles.colors.light.backgroundImage,
    lightTagText: styles.colors.dark.secondary,
    borderColor: styles.colors.light.backgroundImage,
    borderColorLight: styles.colors.secondary.borderLight,
    resetBackground: styles.colors.light.overlay,
    resetBackgroundHover: styles.colors.light.overlayDark,
    moneroDark: styles.colors.monero.dark,
    controlBackground: 'transparent',
    switchBorder: styles.colors.darkMode.input,
    switchCircle: styles.colors.dark.secondary,
    switchController: styles.colors.light.overlay,
  },
}

export default darkTheme
